version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1
  kubernetes: circleci/kubernetes@1.25.6

jobs:
    build:
        docker:
            - image: cimg/base:2021.04
        steps:
            - checkout
            - run:
                name: install dependencies
                command: |
                    sudo apt update && sudo apt install -y tar gzip curl nginx pylint
                    sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                    sudo chmod +x /bin/hadolint
            - run:
                name: run lint
                command: |
                    hadolint --ignore DL3004 Dockerfile
                    pylint --disable=E,DL3004 index.html
            - setup_remote_docker
            - run:
                name: Install Docker client
                command: |
                    set -x
                    VER="17.03.0-ce"
                    curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
                    tar -xz -C /tmp -f /tmp/docker-$VER.tgz
                    sudo mv /tmp/docker/* /usr/bin
            - run:
                name: Build Docker image
                command: docker build -t thinhvu2511/helloworld:v1 .
            - run:
                name: Push to Docker Hub
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
                    docker push thinhvu2511/helloworld:v1
    test-cluster:
        executor: aws-eks/python3
        parameters:
            cluster-name: 
                description: |
                    helloworld
                type: string
        steps:
            - kubernetes/install:
                kubectl-version: v1.22.0
            - aws-eks/update-kubeconfig-with-authenticator:
                cluster-name: << parameters.cluster-name >>
            - run:
                command: |
                    kubectl get services
                name: Test cluster
workflows:
    default:
        jobs:
            - build
            - aws-eks/create-cluster:
                cluster-name: my-eks-demo
            - test-cluster:
                cluster-name: my-eks-demo
                requires:
                    - aws-eks/create-cluster
